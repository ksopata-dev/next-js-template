## Guide

https://www.youtube.com/playlist?list=PLT98CRl2KxKEUHie1m24-wkyHpEsa4Y70

## Starting local containers

from ./docker/deployment directory run

```
docker compose up -d
This should create two linux images and containers - one for the ansible node and the second one for nodejs node.
```

## Connecting via putty

Putty can be downloaded from: https://the.earth.li/~sgtatham/putty/latest/w32/putty.exe

After running, fill the:

`Host Name` with `localhost`,
`Port` with `2222`,

![putty configuration](image.png)

In new window, when prompted for username and password use ans_dep|password.

![putty successfull login](image-1.png)

## SSH connection between nodes

To connect to `nodejs` from `ansible` node below command can be used:

```
ssh host.docker.internal -p 2222
```

(password: `password`)

![docker ssh connection from ansible node](image-2.png)

## Generating and logging with the Ansible key

from the `ansible` node run the:

```
ssh-keygen -t ed25519 -C "ansible"
```

- for `directory`, please provide the /home/ans_dep/.ssh/ansible
- for `passphrase`, please do not provide anything

![successfully key generation](image-3.png)

_note: if using different key name then ansible, this will need to be reflected in the $/deployment/ansible/ansible.cfg file_

extracted key can be then imported into the nodejs node by running the:

```
ssh-copy-id -i /home/ans_dep/.ssh/ansible -p 2222 host.docker.internal
```

When connecting to the nodejs node, the key should be now added to authorized_keys

![authorized keys](image-4.png)

Now, when connecting with:

```
ssh -i /home/ans_dep/.ssh/ansible -p 2222 host.docker.internal
```

there should be no password prompt

![no password promopt](image-5.png)

## Adding key to Github SSH

On ansible node `cd` to directory with previously generated key and read the `.pub` file content

![reading pub file](image-6.png)

Within Github, navigate to Settings > SSH keys and create new SSH key

provide the name of your choice and add `.pub` file content as a key

![adding new key in git](image-7.png)

![successfully added SSH key](image-8.png)

Now solution can be dowloaded by:

```
ssh-agent bash -c 'ssh-add /home/ans_dep/.ssh/ansible; git clone git@github.com:ksopata-dev/next-js-template.git'
```

We can also configure git login details (to check current config use `cat ~/.gitconfig`):

```
git config --global user.name "XXX XXX"
git config --global user.email "XXX@XXX.XXX"
```

# Configuring ansible

List of the servers to use for deployment can be configured with `$/docker/deployment/ansible/inventory` file.

Ansible commands should be run from `/home/ans_dep/next-js-template/docker/deployment/ansible` directory

To check the `inventory` file configuration you should be able to run the:

```
ansible all -m ping
```

Below result should indicate successfull ping

![successfully inventory ping](image-10.png)

# Useful commands:

```
ansible all -m gather_facts
```

gathers details about the connected hosts. (Can be limited with `--limit`)

```

```

TODO: We need to avoid clearing the deployment directory in ansbile playbook
