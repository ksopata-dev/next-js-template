---
- name: build and deploy Next.js app
  hosts: all
  become: true
  vars:
    copy_to_directory: /home/ans_dep/next-js-template
    app_path: /home/ans_dep/next-js-template/web-app
    service_file_path: /home/ans_dep/next-js-template/docker/deployment/ansible/nextjs.service
    deployment_path: /var/www/nextjs_app
  tasks:
    - name: ensure rsync is installed
      package:
        name: rsync

    - name: copy app to remote server
      synchronize:
        src: "{{ app_path }}"
        dest: "{{ copy_to_directory }}"
        recursive: yes
        delete: yes

    - name: ensure node.js is installed
      apt:
        name: nodejs
        state: present
      become: yes
    - name: ensure npm is installed
      apt:
        name: npm
        state: present
      become: yes

    - name: verify app directory exists
      stat:
        path: "{{ app_path }}"
      register: app_dir

    - name: fail if app directory does not exist
      fail:
        msg: "The app directory {{ app_path }} does not exist."
      when: not app_dir.stat.exists

    - name: install dependencies
      command: npm install
      args:
        chdir: "{{ app_path }}"

    - name: build the next.js app
      command: npm run build
      args:
        chdir: "{{ app_path }}"

    - name: cleanup deployment path
      command: rm -rf "{{ deployment_path }}"

    - name: copy built app to deployment path
      command: mv -f "{{ app_path }}/.next" "{{ deployment_path }}"

    - name: copy static files to deployment path
      command: mv -f "{{ app_path }}/public" "{{ deployment_path }}/public"

    - name: create systemd service file for next.js
      synchronize:
        src: "{{ service_file_path }}"
        dest: /etc/systemd/system/
        recursive: yes
        delete: yes

    - name: reload systemd
      command: systemctl daemon-reload
      become: yes

    - name: start and enable next.js service
      systemd:
        name: nextjs
        state: started
        enabled: yes
      become: yes
